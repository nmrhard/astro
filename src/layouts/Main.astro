---
import Footer from '../components/Footer.astro';
import NavigationBar from '../components/NavigationBar.astro';
import '../styles/global.css';

type Props = {
  title: string;
};

const {title} = Astro.props;
---

<html lang="en" class="dark">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;&display=swap" rel="stylesheet" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="Frau Katarina's website" />
    <title>{title}</title>
    <script is:inline>
      const DARK_THEME_CLASS = "dark";
      const COLOUR_MODE = "COLOUR_MODE";
      const LIGHT_THEME = "LIGHT";
      const DARK_THEME = "DARK";
      const rootEl = document.documentElement;

      const getInitialColourMode = () => {
        const previouslySavedColourMode = window.localStorage.getItem(COLOUR_MODE);
        if (previouslySavedColourMode) {
          return previouslySavedColourMode;
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return DARK_THEME;
        }
        return LIGHT_THEME;
      };

      const initialColourMode = getInitialColourMode();
      
      const setInitialColourMode = (mode) => {
        if (mode === LIGHT_THEME) {
          rootEl.classList.remove(DARK_THEME_CLASS);
        } else {
          rootEl.classList.add(DARK_THEME_CLASS);
        }
      };

      setInitialColourMode(initialColourMode);
    </script>
  </head>
  <body>
    <main>
      <NavigationBar />
      <slot />
      <Footer />
    </main>
  </body>
</html>